plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    group = 'com.mjc.school'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    repositories {
        mavenCentral()
    }
dependencies {
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.18'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.7'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    implementation 'com.tngtech.archunit:archunit-junit5:1.2.1'

    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"


    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
    testImplementation group: 'org.springframework', name: 'spring-test', version: '5.3.27'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
}
    test {
        useJUnitPlatform()
    }
}
task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}
